[{"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/index.js":"1","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/App.js":"2","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/store.js":"3","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/AppRoute.js":"4","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/actions/userAction.js":"5","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/actions/authAction.js":"6","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/AppNavbar.js":"7","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/reducers/rootReducer.js":"8","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/PrivateRoutePsikiater.js":"9","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/PrivateRoutePasien.js":"10","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/actions/actionTypes.js":"11","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/actions/appAction.js":"12","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Login.js":"13","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/RegisterPasien.js":"14","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/RegisterPsikiater.js":"15","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/PatientHistory/index.js":"16","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Checkout/index.js":"17","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Appointment/index.js":"18","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/API/mainServer.js":"19","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/reducers/appReducer.js":"20","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/reducers/userReducer.js":"21","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Search/index.js":"22","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Psikiater/index.js":"23","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/index.js":"24","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/PrescriptionModal.js":"25","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/ReviewAppointmentModal.js":"26","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/AppointmentCard.js":"27","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/actions/appointmentAction.js":"28","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Psikiater/PsikiaterDashboardRoute.js":"29","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/Corousel.js":"30","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/LineSatu.js":"31","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/LineDua.js":"32","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/Testimoni.js":"33","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/Footer.js":"34","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/CardResult/index.js":"35","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/Sidebar/index.js":"36","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Profile/index.js":"37","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/History/index.js":"38","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/Table/index.js":"39","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/AddDiagnoseModal.js":"40","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/CreatePrescriptionModal.js":"41","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/Card/index.js":"42"},{"size":713,"mtime":1610013348720,"results":"43","hashOfConfig":"44"},{"size":1183,"mtime":1610013348696,"results":"45","hashOfConfig":"44"},{"size":222,"mtime":1610013348728,"results":"46","hashOfConfig":"44"},{"size":1532,"mtime":1610013348696,"results":"47","hashOfConfig":"44"},{"size":5580,"mtime":1610013348728,"results":"48","hashOfConfig":"44"},{"size":1010,"mtime":1610013348728,"results":"49","hashOfConfig":"44"},{"size":4512,"mtime":1610013348708,"results":"50","hashOfConfig":"44"},{"size":234,"mtime":1610013348728,"results":"51","hashOfConfig":"44"},{"size":455,"mtime":1610013348712,"results":"52","hashOfConfig":"44"},{"size":464,"mtime":1610013348712,"results":"53","hashOfConfig":"44"},{"size":62,"mtime":1610013348728,"results":"54","hashOfConfig":"44"},{"size":241,"mtime":1610013348728,"results":"55","hashOfConfig":"44"},{"size":3732,"mtime":1610013348724,"results":"56","hashOfConfig":"44"},{"size":5090,"mtime":1610013348724,"results":"57","hashOfConfig":"44"},{"size":6755,"mtime":1610013348724,"results":"58","hashOfConfig":"44"},{"size":2667,"mtime":1610013348724,"results":"59","hashOfConfig":"44"},{"size":5336,"mtime":1610013348724,"results":"60","hashOfConfig":"44"},{"size":5824,"mtime":1610013348724,"results":"61","hashOfConfig":"44"},{"size":151,"mtime":1610013348696,"results":"62","hashOfConfig":"44"},{"size":312,"mtime":1610013348728,"results":"63","hashOfConfig":"44"},{"size":533,"mtime":1610013348728,"results":"64","hashOfConfig":"44"},{"size":2590,"mtime":1610013348724,"results":"65","hashOfConfig":"44"},{"size":625,"mtime":1610013348724,"results":"66","hashOfConfig":"44"},{"size":523,"mtime":1610013348724,"results":"67","hashOfConfig":"44"},{"size":1614,"mtime":1610013348712,"results":"68","hashOfConfig":"44"},{"size":1835,"mtime":1610013348712,"results":"69","hashOfConfig":"44"},{"size":3685,"mtime":1610013348708,"results":"70","hashOfConfig":"44"},{"size":3057,"mtime":1610013348728,"results":"71","hashOfConfig":"44"},{"size":751,"mtime":1610013348724,"results":"72","hashOfConfig":"44"},{"size":1356,"mtime":1610033637949,"results":"73","hashOfConfig":"44"},{"size":3537,"mtime":1610034714853,"results":"74","hashOfConfig":"44"},{"size":752,"mtime":1610038595081,"results":"75","hashOfConfig":"44"},{"size":3540,"mtime":1610036772750,"results":"76","hashOfConfig":"44"},{"size":1842,"mtime":1610038163892,"results":"77","hashOfConfig":"44"},{"size":1400,"mtime":1610013348712,"results":"78","hashOfConfig":"44"},{"size":1982,"mtime":1610013348712,"results":"79","hashOfConfig":"44"},{"size":4475,"mtime":1610013348724,"results":"80","hashOfConfig":"44"},{"size":1705,"mtime":1610013348724,"results":"81","hashOfConfig":"44"},{"size":4700,"mtime":1610013348712,"results":"82","hashOfConfig":"44"},{"size":1595,"mtime":1610013348708,"results":"83","hashOfConfig":"44"},{"size":2317,"mtime":1610013348712,"results":"84","hashOfConfig":"44"},{"size":2106,"mtime":1610013348712,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"13mcflf",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/index.js",[],["184","185"],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/App.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/store.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/AppRoute.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/actions/userAction.js",["186","187","188","189","190"],"import API from \"../../API/mainServer\";\nimport appAction from \"./appAction\";\nimport swal from \"sweetalert\";\nimport { LOGIN, LOGOUT } from \"./actionTypes\";\n\nconst registerPsikiater = (\n  first_name,\n  last_name,\n  password,\n  email,\n  date_of_birth,\n  gender,\n  experience_year,\n  region,\n  fee,\n  work_address\n) => async (dispatch) => {\n  try {\n    const psikiater = await API({\n      method: \"POST\",\n      url: \"/auth/register-psikiater\",\n      data: {\n        first_name: first_name,\n        last_name: last_name,\n        password: password,\n        email: email,\n        date_of_birth,\n        gender: gender,\n        experience_year: experience_year,\n        region: region,\n        fees: fee,\n        work_address: work_address,\n      },\n    });\n\n    localStorage.setItem(\"isLogin\", true);\n    localStorage.setItem(\"accesstoken\", psikiater.data.token);\n    localStorage.setItem(\"userId\", psikiater.data.data._id);\n    localStorage.setItem(\"role\", psikiater.data.role);\n\n    dispatch({\n      type: LOGIN,\n      payload: {\n        isLogin: true,\n        role: psikiater.data.role,\n        user_data: psikiater.data.data,\n      },\n    });\n  } catch (error) {\n    swal(\"Register Gagal!\", error.response.data.message, \"error\");\n  }\n};\n\nconst uploadFotoPasien = (\n  avatar,\n) => async (dispatch) => {\n  try {\n    const role = localStorage.getItem(\"role\");\n    const user_id = localStorage.getItem(\"userId\");\n    const accesstoken = localStorage.getItem(\"accesstoken\");\n\n    const data = new FormData()\n    data.append(\"profile_photo\", avatar)\n    const uploadFotoPasien = await API({\n      method: \"POST\",\n      url: `/patients/upload/${user_id}`,\n      data: data,\n      headers:{\n        accesstoken: accesstoken,\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst uploadFotoPsikiater = (\n  avatar,\n) => async (dispatch) => {\n  try {\n    const role = localStorage.getItem(\"role\");\n    const user_id = localStorage.getItem(\"userId\");\n    const accesstoken = localStorage.getItem(\"accesstoken\");\n\n    const data = new FormData()\n    data.append(\"profile_photo\", avatar)\n    const uploadFotoPsikiater = await API({\n      method: \"POST\",\n      url: `/psikiater/upload/${user_id}`,\n      data: data,\n      headers:{\n        accesstoken: accesstoken,\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst registerPatient = (\n  first_name,\n  last_name,\n  password,\n  email,\n  date_of_birth,\n  gender,\n  address\n) => async (dispatch) => {\n  try {\n    const patient = await API({\n      method: \"POST\",\n      url: \"/auth/register-patient\",\n      data: {\n        first_name: first_name,\n        last_name: last_name,\n        password: password,\n        email: email,\n        date_of_birth: date_of_birth,\n        gender: gender,\n        address: address,\n      },\n    });\n\n    localStorage.setItem(\"isLogin\", true);\n    localStorage.setItem(\"accesstoken\", patient.data.token);\n    localStorage.setItem(\"userId\", patient.data.data._id);\n    localStorage.setItem(\"role\", patient.data.role);\n\n    dispatch({\n      type: LOGIN,\n      payload: {\n        isLogin: true,\n        role: patient.data.role,\n        user_data: patient.data.data,\n      },\n    });\n  } catch (error) {\n    swal(\"Register Gagal!\", error.response.data.message, \"error\");\n  }\n};\n\n\n\n\n\nconst fetchUserData = () => async (dispatch) => {\n  try {\n    const role = localStorage.getItem(\"role\");\n    const user_id = localStorage.getItem(\"userId\");\n    const accesstoken = localStorage.getItem(\"accesstoken\");\n\n    if (!role || !user_id || !accesstoken) {\n      console.log(\"not persist data\");\n      dispatch({ type: LOGOUT });\n    }\n\n    if (role === \"PATIENT\") {\n      const patient = await API({\n        method: \"GET\",\n        url: `/patients/${user_id}`,\n        headers: {\n          accesstoken: accesstoken,\n        },\n      });\n\n      dispatch({\n        type: LOGIN,\n        payload: {\n          isLogin: true,\n          role: role,\n          user_data: patient.data.data,\n        },\n      });\n    }\n\n    if (role === \"PSIKIATER\") {\n      const psikiater = await API({\n        method: \"GET\",\n        url: `/psikiater/${user_id}`,\n        headers: {\n          accesstoken: accesstoken,\n        },\n      });\n\n      dispatch({\n        type: LOGIN,\n        payload: {\n          isLogin: true,\n          role: role,\n          user_data: psikiater.data.data,\n        },\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst checkAccessToken = (accessToken) => async (dispatch) => {\n  try {\n    const getUserProfile = await API({\n      method: \"GET\",\n      url: \"/auth/identifer\",\n      headers: {\n        accessToken: accessToken,\n      },\n    });\n\n    console.log(getUserProfile)\n\n    dispatch({\n      type: \"LOGIN\",\n      payload: {\n        user_id: getUserProfile.data.data.user_id,\n        role: getUserProfile.data.data.role,\n      },\n    });\n    dispatch(appAction.setLoading(false));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst changePsikiaterSchedule = (\n  psikiater_id,\n  accesstoken,\n  work_days,\n  work_time\n) => async (dispatch) => {\n  try {\n    const response = await API({\n      method: \"PATCH\",\n      url: `/schedule/${psikiater_id}`,\n      headers: {\n        accesstoken: accesstoken,\n      },\n      data: {\n        work_days: work_days,\n        work_time: work_time,\n      },\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst userAction = {\n  checkAccessToken,\n  registerPsikiater,\n  registerPatient,\n  fetchUserData,\n  changePsikiaterSchedule,\n  uploadFotoPasien,\n  uploadFotoPsikiater,\n};\n\nexport default userAction;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/actions/authAction.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/AppNavbar.js",["191"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navbar, Button, Image, Modal, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/actions/authAction\";\nimport userAction from \"../redux/actions/userAction\";\nimport \"./AppNavbar.css\";\n\nconst AppNavbar = () => {\n  const isLogin = useSelector((store) => store.user.isLogin);\n  const role = useSelector((store) => store.user.role);\n  const user = useSelector((store) => store.user.user_data);\n  const dispatch = useDispatch();\n  console.log(user.avatar_url);\n\n  const [show, setShow] = useState(false);\n\n  const [nameFile, setNameFile] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  console.log(selectedFile);\n  console.log(nameFile);\n\n  const uploadPhoto = (e) => {\n    e.preventDefault();\n    setSelectedFile(e.target.files[0]);\n    setNameFile(e.target.files[0].name);\n  };\n\n  const handlePhoto = () => {\n    dispatch(userAction.uploadFotoPasien(selectedFile));\n  };\n  const handlePhotoPsikiater = () => {\n    dispatch(userAction.uploadFotoPsikiater(selectedFile));\n  };\n\n  const RoleAction = () => {\n    return role === \"PATIENT\" ? (\n      <div className=\"ml-auto \">\n        <Link className=\"mr-3 text-light\" to=\"/patient-history\">\n          History\n        </Link>\n        <Image\n          height=\"30\"\n          width=\"30\"\n          className=\"mr-3\"\n          src={user.avatar_url}\n          roundedCircle\n          onClick={handleShow}\n        />\n        <Button onClick={() => dispatch(logout())} variant=\"outline-light\">\n          Sign Out\n        </Button>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Upload Foto Profile Patient</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form>\n              <label>{nameFile}</label>\n              <input type=\"file\" onChange={uploadPhoto} />\n            </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              value=\"Upload\"\n              onClick={handlePhoto}\n            >\n              Upload\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    ) : (\n      <div className=\"ml-auto \">\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Upload Foto Profile Psikiater</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form>\n              <label>{nameFile}</label>\n              <input type=\"file\" onChange={uploadPhoto} />\n            </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handlePhotoPsikiater}>\n              Upload\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Image\n          height=\"30\"\n          width=\"30\"\n          src={\n            user.avatar_url ??\n            \"https://images.unsplash.com/photo-1580820267682-426da823b514?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8cG9ydHJhaXQlMjBiYWNrZ3JvdW5kfGVufDB8fDB8&ixlib=rb-1.2.1&w=1000&q=80\"\n          }\n          roundedCircle\n          onClick={handleShow}\n        />\n      </div>\n    );\n  };\n\n  const NavbarActions = () => {\n    return isLogin ? (\n      <RoleAction />\n    ) : (\n      <div className=\"ml-auto \">\n        <Link to=\"/registerPasien\" className=\"mr-3 \">\n          <Button variant=\"outline-light\">Register as Patient</Button>\n        </Link>\n        <Link to=\"/registerPsikiater\" className=\"mr-3 \">\n          <Button variant=\"outline-light\">Register as Psikiater</Button>\n        </Link>\n        <Link to=\"/login\">\n          <Button variant=\"outline-light\">Sign In</Button>\n        </Link>\n      </div>\n    );\n  };\n\n  return (\n    <Navbar className=\"navbar-color\" sticky=\"top\">\n      <div className=\"container\">\n        {role !== \"PSIKIATER\" ? (\n          <Link to=\"/\">\n            <Navbar.Brand>Navbar</Navbar.Brand>\n          </Link>\n        ) : (\n          <Navbar.Brand>Navbar</Navbar.Brand>\n        )}\n        <NavbarActions />\n      </div>\n    </Navbar>\n  );\n};\n\nexport default AppNavbar;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/reducers/rootReducer.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/PrivateRoutePsikiater.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/PrivateRoutePasien.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/actions/actionTypes.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/actions/appAction.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Login.js",["192","193","194","195"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../redux/actions/authAction\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user.role === \"PSIKIATER\") {\n      // TODO: change the route to psikiater dashboard\n      history.push(\"/psikiater\");\n    } else if (user.role === \"PATIENT\") {\n      history.push(\"/\");\n    }\n  }, [user.isLogin]);\n\n  const handleClose = () => {\n    history.push(\"/\");\n  };\n\n  const formHandle = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  const registerPsikiater = () => {\n    history.push(\"/registerPsikiater\");\n  };\n\n  const registerPasien = () => {\n    history.push(\"/registerPasien\");\n  };\n\n  return (\n    <div>\n      <Container style={{ marginLeft: \"0%\" }}>\n        <Row>\n          <Col\n            style={{\n              backgroundImage: `url(\"https://images.unsplash.com/photo-1580820267682-426da823b514?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8cG9ydHJhaXQlMjBiYWNrZ3JvdW5kfGVufDB8fDB8&ixlib=rb-1.2.1&w=1000&q=80\")`,\n            }}\n          ></Col>\n          <Col style={{ padding: \"18%\" }}>\n            <h1>Login</h1>\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                ></Form.Control>\n              </Form.Group>\n              <Button\n                variant=\"secondary\"\n                onClick={handleClose}\n                style={{ margin: \"5px\" }}\n              >\n                Home\n              </Button>\n              <Button variant=\"primary\" onClick={formHandle}>\n                Sign In\n              </Button>\n            </Form>\n            <Form.Group\n              style={{ textAlign: \"center\", color: \"red\", marginTop: \"10%\" }}\n            >\n              <a>Don't have an account?</a>\n            </Form.Group>\n            <Form.Group style={{ textAlign: \"center\", color: \"blue\" }}>\n              <a style={{ cursor: \"pointer\" }} onClick={registerPsikiater}>\n                Sign Up Psikiater\n              </a>{\" \"}\n              ||{\" \"}\n              <a style={{ cursor: \"pointer\" }} onClick={registerPasien}>\n                Sign Up Pasien\n              </a>\n            </Form.Group>\n          </Col>\n        </Row>\n      </Container>\n      {/* <span>{JSON.stringify(user)}</span> */}\n      {/* <form onSubmit={formHandle}>\n        <input\n          type=\"text\"\n          placeholder=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n        />\n        <input type=\"submit\" value=\"Login\" />\n        <button onClick={registerPsikiater}>Register Psikiater</button>\n        <button onClick={registerPasien}>Register Pasien</button>\n      </form> */}\n    </div>\n  );\n};\n\nexport default Login;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/RegisterPasien.js",["196","197"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport userAction from \"../redux/actions/userAction\";\nimport { useHistory } from \"react-router-dom\";\nimport { ArrowLeft } from \"react-bootstrap-icons\";\nimport { Form, Row, Col, Container, Button, Image } from \"react-bootstrap\";\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const user = useSelector((state) => state.user);\n  const [first_name, setFirstName] = useState(\"\");\n  const [last_name, setLastName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [date_of_birth, setDateofBirth] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n\n  const formHandle = (e) => {\n    e.preventDefault();\n    dispatch(\n      userAction.registerPatient(\n        first_name,\n        last_name,\n        password,\n        email,\n        date_of_birth,\n        gender,\n        address\n      )\n    );\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (user.role === \"PATIENT\") {\n      history.push(\"/\");\n    }\n  }, [user.isLogin]);\n\n  return (\n    <>\n      <Container style={{ margin: \"0px\" }}>\n        <Row>\n          <Col\n            style={{\n              backgroundImage: `url(\"https://images.unsplash.com/photo-1580820267682-426da823b514?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8cG9ydHJhaXQlMjBiYWNrZ3JvdW5kfGVufDB8fDB8&ixlib=rb-1.2.1&w=1000&q=80\")`,\n            }}\n          ></Col>\n          <Col style={{ padding: \"1% 0%\", marginLeft: \"10%\" }}>\n            <p>\n              <b onClick={handleBack} style={{ cursor: \"pointer\" }}>\n                <ArrowLeft\n                  color=\"black\"\n                  size={20}\n                  style={{ paddingRight: \"5px\" }}\n                />\n                Back\n              </b>\n            </p>\n            <h2>Register as Patient</h2>\n            <Form onSubmit={formHandle}>\n              <Form.Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                      onChange={(e) => setFirstName(e.target.value)}\n                      value={first_name}\n                    ></Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                      onChange={(e) => setLastName(e.target.value)}\n                      value={last_name}\n                    ></Form.Control>\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n              <Form.Group>\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Date of Birth</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  onChange={(e) => setDateofBirth(e.target.value)}\n                  value={date_of_birth}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Gender</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  className=\"mr-sm-2\"\n                  id=\"inlineFormCustomSelect\"\n                  custom\n                  onChange={(e) => setGender(e.target.value)}\n                  value={gender}\n                >\n                  <option value=\"\">Choose...</option>\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={2}\n                  placeholder=\"Address\"\n                  onChange={(e) => setAddress(e.target.value)}\n                  value={address}\n                ></Form.Control>\n              </Form.Group>\n              <Button type=\"submit\" value=\"Register\" style={{ margin: \"10px\" }}>\n                Register\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Register;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/RegisterPsikiater.js",["198","199"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport userAction from \"../redux/actions/userAction\";\nimport { useHistory } from \"react-router-dom\";\nimport { ArrowLeft } from \"react-bootstrap-icons\";\nimport { Form, Row, Col, Container, Button, Image } from \"react-bootstrap\";\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector((state) => state.user);\n\n  const [first_name, setFirstName] = useState(\"\");\n  const [last_name, setLastName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [date_of_birth, setDateofBirth] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [experience_year, setExperienceYear] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [fee, setFee] = useState(\"\");\n  const [work_address, setWorkAddress] = useState(\"\");\n\n  const formHandle = (e) => {\n    e.preventDefault();\n    dispatch(\n      userAction.registerPsikiater(\n        first_name,\n        last_name,\n        password,\n        email,\n        date_of_birth,\n        gender,\n        experience_year,\n        region,\n        fee,\n        work_address\n      )\n    );\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (user.role === \"PSIKIATER\") {\n      history.push(\"/psikiater-dashboard\");\n    }\n  }, [user.isLogin]);\n\n  return (\n    <>\n      <Container style={{ margin: \"0px\" }}>\n        <Row>\n          <Col\n            style={{\n              backgroundImage: `url(\"https://images.unsplash.com/photo-1580820267682-426da823b514?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8cG9ydHJhaXQlMjBiYWNrZ3JvdW5kfGVufDB8fDB8&ixlib=rb-1.2.1&w=1000&q=80\")`,\n            }}\n          ></Col>\n          <Col style={{ padding: \"2% 0%\", marginLeft: \"10%\" }}>\n            <p>\n              <b onClick={handleBack} style={{ cursor: \"pointer\" }}>\n                <ArrowLeft\n                  color=\"black\"\n                  size={20}\n                  style={{ paddingRight: \"5px\" }}\n                />\n                Back\n              </b>\n            </p>\n            <h2>Register as Psikiater</h2>\n            <Form onSubmit={formHandle}>\n              <Form.Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                      onChange={(e) => setFirstName(e.target.value)}\n                      value={first_name}\n                    ></Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                      onChange={(e) => setLastName(e.target.value)}\n                      value={last_name}\n                    ></Form.Control>\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n              <Form.Group>\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                ></Form.Control>\n                <Form.Control.Feedback type=\"invalid\">\n                  email tidak boleh kosong.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Date of Birth</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  onChange={(e) => setDateofBirth(e.target.value)}\n                  value={date_of_birth}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Gender</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  className=\"mr-sm-2\"\n                  id=\"inlineFormCustomSelect\"\n                  custom\n                  onChange={(e) => setGender(e.target.value)}\n                  value={gender}\n                >\n                  <option value=\"\">Choose...</option>\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Work Address</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={2}\n                  placeholder=\"Work Address\"\n                  onChange={(e) => setWorkAddress(e.target.value)}\n                  value={work_address}\n                ></Form.Control>\n              </Form.Group>\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Experience Year</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Experience Year\"\n                      onChange={(e) => setExperienceYear(e.target.value)}\n                      value={experience_year}\n                    ></Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Region</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Region\"\n                      onChange={(e) => setRegion(e.target.value)}\n                      value={region}\n                    ></Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Fee</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Fee\"\n                      onChange={(e) => setFee(e.target.value)}\n                      value={fee}\n                    ></Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Button type=\"submit\" value=\"Register\">\n                Register\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Register;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/PatientHistory/index.js",["200"],"import React, { useState, useEffect } from \"react\";\nimport \"./main.css\";\nimport AppointmentCard from \"../../components/AppointmentCard\";\nimport PrescriptionModal from \"../../components/PrescriptionModal\";\nimport ReviewAppointmentModal from \"../../components/ReviewAppointmentModal\";\nimport API from \"../../API/mainServer\";\nimport { useSelector } from \"react-redux\";\n\nconst PatientHistory = () => {\n  const user = useSelector((store) => store.user.user_data);\n  const [prescriptionModalShow, setPrescriptionModalShow] = useState(false);\n  const [reviewModalShow, setReviewModalShow] = useState(false);\n  const [prescription, setPrescription] = useState({});\n  const [choosenAppointment, setChoosenAppointment] = useState({});\n  const [appointment, setAppointment] = useState([]);\n\n  const fetchAppointment = async () => {\n    const token = localStorage.getItem(\"accesstoken\");\n    const response = await API({\n      method: \"GET\",\n      url: `/appointments/patient`,\n      headers: {\n        accesstoken: token,\n      },\n    });\n\n    setAppointment(response.data.data);\n  };\n\n  useEffect(\n    () => {\n      fetchAppointment();\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  const handlePerscriptionModalShow = (content, e) => {\n    e.preventDefault();\n    setPrescription(content);\n    setPrescriptionModalShow(true);\n  };\n  const handlePrescriptionModalClose = () => {\n    setPrescriptionModalShow(false);\n    setPrescription({});\n  };\n\n  const handleReviewModalShow = (content, e) => {\n    e.preventDefault();\n    setChoosenAppointment(content);\n    setReviewModalShow(true);\n  };\n  const handleReviewModalClose = () => {\n    setReviewModalShow(false);\n    setChoosenAppointment({});\n  };\n\n  return (\n    <div className=\"container main-container\">\n      <h3 className=\"title\">Patient Appointment History</h3>\n\n      <div className=\"list-history\">\n        <PrescriptionModal\n          show={prescriptionModalShow}\n          handleClose={handlePrescriptionModalClose}\n          prescription={prescription}\n        />\n        <ReviewAppointmentModal\n          show={reviewModalShow}\n          handleClose={handleReviewModalClose}\n          patient_id={choosenAppointment.patient_id?._id}\n          psikiater_id={choosenAppointment.psikiater_id?._id}\n          appointment_id={choosenAppointment._id}\n        />\n\n        {appointment.map((d) => (\n          <AppointmentCard\n            key={d._id}\n            appointment={d}\n            showPrescriptionModal={(v, e) => handlePerscriptionModalShow(v, e)}\n            showReviewModal={(v, e) => handleReviewModalShow(v, e)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PatientHistory;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Checkout/index.js",["201","202"],"import { useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport swal from \"sweetalert\";\nimport API from \"../../API/mainServer\";\nimport moment from \"moment\";\nimport {\n  Jumbotron,\n  Container,\n  Row,\n  Col,\n  Form,\n  Card,\n  Button,\n} from \"react-bootstrap\";\nimport appointmentAction from \"../../redux/actions/appointmentAction\";\n\nfunction Checkout() {\n  const [appointment, setAppointment] = useState({});\n  const { appointment_id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  console.log(appointment_id);\n  console.log(process.env.REACT_APP_BASE_URL);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const appointment = await API({\n          method: \"GET\",\n          url: `/appointments/${appointment_id}`,\n          headers: {\n            accesstoken: localStorage.getItem(\"accesstoken\"),\n          },\n        });\n\n        setAppointment(appointment.data.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getData();\n\n    return getData;\n  }, []);\n\n  const checkoutButtonHandler = () => {\n    dispatch(\n      appointmentAction.changeStatusAppointment(\n        \"Paid\",\n        appointment._id,\n        localStorage.getItem(\"accesstoken\")\n      )\n    );\n    history.push(\"/patient-history\");\n    swal(\"Checkout Sukses!\", \"\", \"success\");\n  };\n\n  return (\n    <div>\n      <Container>\n        <Jumbotron\n          style={{\n            marginTop: \"5%\",\n            textAlign: \"center\",\n            backgroundColor: \"#ff4757\",\n            color: \"white\",\n          }}\n        >\n          <Row>\n            <Col style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n              <img\n                style={{\n                  marginTop: \"30px\",\n                  maxWidth: \"250px\",\n                  maxHeight: \"230px\",\n                }}\n                src={appointment?.psikiater_id?.avatar_url}\n              ></img>\n            </Col>\n            <Col\n              sm={12}\n              lg={6}\n              style={{ display: \"flex\", justifyContent: \"space-evenly\" }}\n            >\n              <Container>\n                <Form style={{ marginTop: \"30px\" }}>\n                  <Form.Group controlId=\"formPsikiaterName\">\n                    <Form.Label>\n                      <b style={{ color: \"white\" }}>Psikiater</b>\n                    </Form.Label>\n                    <Form.Control\n                      style={{\n                        textAlign: \"center\",\n                        backgroundColor: \"#70a1ff\",\n                      }}\n                      type=\"text\"\n                      value={`${appointment?.psikiater_id?.first_name} ${appointment?.psikiater_id?.last_name}`}\n                      readOnly\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"formPatientName\">\n                    <Form.Label>\n                      <b style={{ color: \"white\" }}>Patient</b>\n                    </Form.Label>\n                    <Form.Control\n                      style={{\n                        textAlign: \"center\",\n                        backgroundColor: \"#70a1ff\",\n                      }}\n                      type=\"text\"\n                      value={`${appointment?.patient_id?.first_name} ${appointment?.patient_id?.last_name}`}\n                      readOnly\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"formScheduledAppointment\">\n                    <Form.Label>\n                      <b style={{ color: \"white\" }}>Schedule</b>\n                    </Form.Label>\n                    <Form.Control\n                      style={{\n                        textAlign: \"center\",\n                        backgroundColor: \"#70a1ff\",\n                      }}\n                      type=\"text\"\n                      value={`${moment(appointment?.appointment_date).format(\n                        \"YYYY MMM DD\"\n                      )} - ${appointment?.appointment_time}`}\n                      readOnly\n                    ></Form.Control>\n                  </Form.Group>\n                </Form>\n              </Container>\n            </Col>\n          </Row>\n        </Jumbotron>\n        <Card\n          style={{\n            backgroundColor: \"#2ed573\",\n            width: \"17rem\",\n            height: \"10rem\",\n            textAlign: \"center\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        >\n          <Card.Header>\n            <b style={{ color: \"#ffffff\" }}>TOTAL PAYMENT</b>\n          </Card.Header>\n          <Card.Body>\n            <Card.Text style={{ color: \"#ffffff\" }}>\n              {appointment?.psikiater_id?.fees}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Container\n          style={{\n            marginTop: \"30px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            style={{\n              margin: \"auto\",\n            }}\n            variant=\"dark\"\n            onClick={checkoutButtonHandler}\n          >\n            CHECKOUT\n          </Button>\n        </Container>\n      </Container>\n    </div>\n  );\n}\nexport default Checkout;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Appointment/index.js",["203","204","205","206","207"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport API from \"../../API/mainServer\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport appointmentAction from \"../../redux/actions/appointmentAction\";\nimport TimePicker from \"react-time-picker\";\n\nconst Appointment = () => {\n  const [psikiaterData, setPsikiaterData] = useState({});\n  const [appointment_time, setAppointmentTime] = useState(\"\");\n  const [appointment_date, setAppointmentDate] = useState(\"\");\n  const [complaint, setComplaint] = useState(\"\");\n  const [allergy, setAllergy] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const dataUser = useSelector((state) => state.user.user_data);\n  const patient_id = dataUser._id;\n  const { psikiater_id } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const getData = await API({\n          url: `/psikiater/${psikiater_id}`,\n          method: \"GET\",\n          headers: {\n            accesstoken: localStorage.getItem(\"accesstoken\"),\n          },\n        });\n        setPsikiaterData(getData.data.data);\n        console.log(getData.data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n\n    return getData;\n  }, []);\n\n  const getIdCallback = (id) => {\n    history.push(`/checkout-payment/${id}`);\n  };\n\n  const createAppointmentHandler = (e) => {\n    e.preventDefault();\n    const accesstoken = localStorage.getItem(\"accesstoken\");\n    dispatch(\n      appointmentAction.createAppointment(\n        complaint,\n        allergy,\n        accesstoken,\n        psikiater_id,\n        patient_id,\n        appointment_date,\n        appointment_time,\n        getIdCallback\n      )\n    );\n  };\n\n  const complaintHandler = (e) => {\n    setComplaint(e.target.value);\n  };\n  const appointmentDateHandler = (e) => {\n    setAppointmentDate(e.target.value);\n  };\n  const appointmentTimeHandler = (e) => {\n    console.log(e.target.value);\n    setAppointmentTime(e.target.value);\n    console.log(appointment_time);\n  };\n\n  const allergyHandler = (e) => {\n    setAllergy(e.target.value);\n  };\n\n  return (\n    <div>\n      <h1 style={{ fontWeight: \"bold\", textAlign: \"center\" }}>Appointment</h1>\n      <Container>\n        <Row>\n          <Col sm={12} lg={6}>\n            <h5 style={{ fontWeight: \"bold\" }}>PSIKIATER DATA</h5>\n            <img\n              src={`${psikiaterData.avatar_url}`}\n              style={{ width: \"300px\", height: \"250px\" }}\n            ></img>\n          </Col>\n          <Col>\n            <Form style={{ marginTop: \"5px\" }}>\n              <Form.Group>\n                <Form.Label>Psikiater Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  value={`${psikiaterData.first_name} ${psikiaterData.last_name} `}\n                  readOnly\n                ></Form.Control>\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  value={`${psikiaterData?.work_address}`}\n                  readOnly\n                ></Form.Control>\n                <Form.Label>Fees</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  value={`${psikiaterData?.fees}`}\n                  readOnly\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Appointment Date</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  onChange={appointmentDateHandler}\n                  value={appointment_date}\n                ></Form.Control>\n              </Form.Group>\n\n              <TimePicker\n                onChange={(v) => {\n                  setAppointmentTime(v);\n                }}\n                value={appointment_time}\n              />\n            </Form>\n          </Col>\n        </Row>\n        <hr></hr>\n        <Row>\n          <Col sm={12} lg={6}>\n            <Form style={{ marginTop: \"30px\" }}>\n              <h5 style={{ fontWeight: \"bold\" }}>PATIENT DATA</h5>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>First Name</Form.Label>\n                  <Form.Control\n                    value={dataUser.first_name}\n                    type=\"text\"\n                    placeholder=\"Enter first name here\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Last Name</Form.Label>\n                  <Form.Control\n                    value={dataUser.last_name}\n                    type=\"text\"\n                    placeholder=\"Enter last name here\"\n                  />\n                </Form.Group>\n              </Form.Row>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Complain</Form.Label>\n                <Form.Control\n                  onChange={complaintHandler}\n                  value={complaint}\n                  as=\"textarea\"\n                  rows={3}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Allergy</Form.Label>\n                <Form.Control\n                  onChange={allergyHandler}\n                  value={allergy}\n                  as=\"textarea\"\n                  rows={3}\n                />\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n        <Button onClick={createAppointmentHandler} variant=\"dark\">\n          Make Appointment\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nexport default Appointment;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/API/mainServer.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/reducers/appReducer.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/reducers/userReducer.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Search/index.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Psikiater/index.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/index.js",["208","209","210","211"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nimport Corousel from \"./Corousel\";\nimport LineSatu from \"./LineSatu\";\nimport LineDua from \"./LineDua\";\nimport Testimoni from \"./Testimoni\";\nimport Footer from \"./Footer\";\n\nconst Home = () => {\n  const history = useHistory();\n\n  return (\n    <div>\n      <Corousel />\n      <LineSatu />\n      <LineDua />\n      <Testimoni />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/PrescriptionModal.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/ReviewAppointmentModal.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/AppointmentCard.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/redux/actions/appointmentAction.js",["212","213"],"import API from \"../../API/mainServer\";\nimport swal from \"sweetalert\";\n\nconst changeStatusAppointment = (status, appointment_id, accesstoken) => async (\n  dispatch\n) => {\n  try {\n    const response = await API({\n      method: \"PATCH\",\n      url: `/appointments/status/${appointment_id}`,\n      headers: {\n        accesstoken: accesstoken,\n      },\n      data: {\n        status: status,\n      },\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst addDiagnosePatient = (\n  diagnose_name,\n  diagnose_date,\n  accesstoken,\n  appointment_id\n) => async (dispatch) => {\n  try {\n    const response = await API({\n      method: \"PATCH\",\n      url: `/appointments/diagnose/${appointment_id}`,\n      headers: {\n        accesstoken: accesstoken,\n      },\n      data: {\n        diagnose_name: diagnose_name,\n        diagnose_date: diagnose_date,\n      },\n    });\n\n    swal(\"Success\", response.data.message, \"success\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst createRating = (\n  patient_id,\n  psikiater_id,\n  appointment_id,\n  rating,\n  review\n) => async (dispatch) => {\n  try {\n    const token = localStorage.getItem(\"accesstoken\");\n\n    const response = await API({\n      method: \"POST\",\n      url: \"/reviews\",\n      headers: {\n        accesstoken: token,\n      },\n      data: {\n        patient_id,\n        psikiater_id,\n        appointment_id,\n        rating,\n        feedback: review,\n      },\n    });\n  } catch (error) {\n    console.log(error);\n    swal(\"Failed\", error.response.data.message, \"error\");\n  }\n};\n\nconst createPrescription = (\n  appointment_id,\n  drug_name,\n  method_name,\n  time_sequence\n) => async (dispatch) => {\n  try {\n    const response = await API({\n      method: \"POST\",\n      url: `/prescriptions/${appointment_id}`,\n      headers: {\n        accesstoken: localStorage.getItem(\"accesstoken\"),\n      },\n      data: {\n        drug_name: drug_name,\n        method_name: method_name,\n        time_sequence: time_sequence,\n      },\n    });\n\n    swal(\"Success\", response.data.message, \"success\");\n  } catch (error) {\n    console.log(error);\n    swal(\"Failed\", error.response.data.message, \"error\");\n  }\n};\n\nconst createAppointment = (\n  complaint,\n  allergy,\n  accesstoken,\n  psikiater_id,\n  patient_id,\n  appointment_date,\n  appointment_time,\n  getIdCallback\n) => async (dispatch) => {\n  try {\n    const createAppointment = await API({\n      method: \"POST\",\n      url: \"/appointments\",\n      headers: {\n        accesstoken: accesstoken,\n      },\n      data: {\n        psikiater_id: psikiater_id,\n        patient_id: patient_id,\n        appointment_date: appointment_date,\n        appointment_time: appointment_time,\n        complaint: complaint,\n        allergy: [allergy],\n      },\n    });\n    console.log(createAppointment.data.data._id);\n    getIdCallback(createAppointment.data.data._id);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst appointmentAction = {\n  changeStatusAppointment,\n  addDiagnosePatient,\n  createRating,\n  createAppointment,\n  createPrescription,\n};\n\nexport default appointmentAction;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Psikiater/PsikiaterDashboardRoute.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/Corousel.js",["214","215"],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/LineSatu.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/LineDua.js",["216"],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/Testimoni.js",["217"],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Home/Footer.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/CardResult/index.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/Sidebar/index.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/Profile/index.js",["218","219","220","221"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport API from \"../../API/mainServer\";\nimport { Container, Form, Col, Row, Image } from \"react-bootstrap\";\n\nconst Index = () => {\n  const accesstoken = localStorage.getItem(\"accesstoken\");\n  const profile = useSelector((store) => store.user.user_data);\n  console.log(profile);\n\n  return (\n    <>\n      <h1 style={{ fontWeight: \"bold\", textAlign: \"center\" }}>Profile</h1>\n      <Container style={{ backgroundColor: \"#ededed\", padding: \"20px\" }}>\n        <Form>\n          <Col style={{ textAlign: \"center\" }}>\n            <Image\n              src=\"https://scontent.fsub7-1.fna.fbcdn.net/v/t1.0-9/135604960_3854645761223085_2398874445404700536_n.jpg?_nc_cat=106&ccb=2&_nc_sid=730e14&_nc_eui2=AeGd1wFCmdo4yvvuAsb016Rghkoj8IS0f8KGSiPwhLR_wir5549QBF8cbUFFzc5qxOLhMLLgO1itgducXBtVcgMr&_nc_ohc=51hqTJGvAPUAX_gPASH&_nc_ht=scontent.fsub7-1.fna&oh=34e59394671ff2788c3f0641555681ba&oe=6015FD64\"\n              roundedCircle\n              alt=\"images\"\n              style={{\n                width: \"300px\",\n                paddingBottom: \"20px\",\n              }}\n            />\n          </Col>\n          <Form.Group as={Row}>\n            <Col sm=\"3\">\n              <Form.Label>Nama Depan</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Nama Depan\"\n                value={profile.first_name}\n                readOnly\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Label>Nama Belakang</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Nama Panjang\"\n                value={profile.last_name}\n                readOnly\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Col sm=\"8\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"email\"\n                value={profile.email}\n                readOnly\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Col sm=\"8\">\n              <Form.Label>Tanggal Lahir</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Tanggal Lahir\"\n                value={profile.date_of_birth}\n                readOnly\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Col sm=\"8\">\n              <Form.Label>Jenis Kelamin</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Jenis Kelamin\"\n                value={profile.gender}\n                readOnly\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Col sm=\"8\">\n              <Form.Label>Alamat Kantor</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Alamat Kantor\"\n                value={profile.work_address}\n                readOnly\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Col sm=\"8\">\n              <Form.Label>Pengalaman</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Pengalaman\"\n                value={profile.info?.experience_year}\n                readOnly\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Col sm=\"8\">\n              <Form.Label>Wilayah</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Wilayah\"\n                value={profile.info?.region}\n                readOnly\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Col sm=\"8\">\n              <Form.Label>Hari Kerja</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Jam Kerja\"\n                value={profile.schedule.work_days}\n                readOnly\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Col sm=\"8\">\n              <Form.Label>Waktu Bekerja</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Jam Kerja\"\n                value={profile.schedule.work_time}\n                readOnly\n              />\n            </Col>\n          </Form.Group>\n        </Form>\n      </Container>\n    </>\n  );\n};\n\nexport default Index;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/pages/History/index.js",["222"],"import React, { useState, useEffect } from \"react\";\nimport API from \"../../API/mainServer\";\nimport AppointmentCard from \"../../components/AppointmentCard\";\nimport PrescriptionModal from \"../../components//PrescriptionModal.js\";\n\nconst Index = () => {\n  const accesstoken = localStorage.getItem(\"accesstoken\");\n  const [prescriptionModalShow, setPrescriptionModalShow] = useState(false);\n  const [prescription, setPrescription] = useState({});\n  const [listOfAppointment, setListOfAppointment] = useState([]);\n\n  useEffect(() => {\n    const fetchAppointment = async () => {\n      const res = await API({\n        method: \"GET\",\n        url: `/appointments/psikiater`,\n        headers: { accesstoken: accesstoken },\n      });\n      console.log(res.data);\n      setListOfAppointment(res.data.data);\n    };\n    fetchAppointment();\n    return fetchAppointment;\n  }, []);\n\n  const handlePerscriptionModalShow = (content, e) => {\n    e.preventDefault();\n    setPrescription(content);\n    setPrescriptionModalShow(true);\n  };\n  const handlePrescriptionModalClose = () => {\n    setPrescriptionModalShow(false);\n    setPrescription({});\n  };\n\n  const listOfHistory = listOfAppointment.map((appointment) => {\n    return (\n      <AppointmentCard\n        appointment={appointment}\n        showPrescriptionModal={(v, e) => handlePerscriptionModalShow(v, e)}\n        showRating={false}\n      />\n    );\n  });\n\n  return (\n    <>\n      <h1 style={{ fontWeight: \"bold\", textAlign: \"center\" }}>History</h1>\n      <PrescriptionModal\n        show={prescriptionModalShow}\n        handleClose={handlePrescriptionModalClose}\n        prescription={prescription}\n      />\n      {listOfHistory}\n    </>\n  );\n};\n\nexport default Index;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/Table/index.js",["223"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Cards from \"../Card/index\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport { Container, ButtonGroup, Button, Row, Col } from \"react-bootstrap\";\nimport API from \"../../API/mainServer\";\nimport moment from \"moment\";\nimport CreatePrescriptionModal from \"../CreatePrescriptionModal.js\";\nimport AddDiagnoseModal from \"../AddDiagnoseModal.js\";\nimport appointmentAction from \"../../redux/actions/appointmentAction.js\";\nimport swal from \"sweetalert\";\n\nconst Index = () => {\n  const dispatch = useDispatch();\n  const accesstoken = localStorage.getItem(\"accesstoken\");\n  const [toggle, setToggle] = useState(false);\n  const [selectedAppointment, setSelectedAppointment] = useState({});\n  const [appointmentData, setAppointmentData] = useState([]);\n  const [showPrescriptionModal, setShowPrescriptionModal] = useState(false);\n  const [showDiagnoseModal, setShowDiagnoseModal] = useState(false);\n\n  //fetch data ketika page pertama kali di buka\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await API({\n        method: \"GET\",\n        url: `/appointments/psikiater`,\n        headers: {\n          accesstoken: accesstoken,\n        },\n      });\n      console.log(res.data);\n      setAppointmentData(res.data.data);\n    };\n    fetchData();\n    return fetchData;\n  }, []);\n\n  const appointment = appointmentData.map((data) => {\n    return {\n      appointment: data,\n      title: `${data.patient_id.first_name} ${data.patient_id.last_name}`,\n      date: `${moment(data.appointment_date).format(\"YYYY-MM-DD\")} ${\n        data.appointment_time\n      }`,\n    };\n  });\n\n  function handleEvent(params) {\n    console.log(params.event._def.extendedProps.appointment);\n    setSelectedAppointment(params.event._def.extendedProps.appointment);\n    setToggle(true);\n  }\n\n  const handlePrescriptionModalShow = () => {\n    setShowPrescriptionModal(true);\n  };\n  const handlePrescriptionModalClose = () => {\n    setShowPrescriptionModal(false);\n  };\n\n  const handleDiagnoseModalShow = () => {\n    setShowDiagnoseModal(true);\n  };\n  const handleDiagnoseModalClose = () => {\n    setShowDiagnoseModal(false);\n  };\n\n  const handleFinishAppointment = () => {\n    dispatch(\n      appointmentAction.changeStatusAppointment(\n        \"Done\",\n        selectedAppointment._id,\n        localStorage.getItem(\"accesstoken\")\n      )\n    );\n    swal(\"Success\", \"Appointment sudah selesai\", \"success\");\n  };\n\n  const AppointmentActionButtons = () => (\n    <Row>\n      <Col>\n        <ButtonGroup\n          style={{ marginBottom: \"1rem\" }}\n          aria-label=\"Appointment Action Group\"\n        >\n          <Button\n            variant=\"primary\"\n            onClick={handlePrescriptionModalShow}\n            disabled={\n              selectedAppointment.prescription_id ||\n              selectedAppointment.status === \"Done\"\n                ? true\n                : false\n            }\n          >\n            Buat Resep\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={handleDiagnoseModalShow}\n            disabled={\n              selectedAppointment.diagnose.diagnose_name === \"\" ? false : true\n            }\n          >\n            Buat Diagnosa\n          </Button>\n        </ButtonGroup>\n      </Col>\n      <Col style={{ textAlign: \"end\" }}>\n        <ButtonGroup\n          style={{ marginBottom: \"1rem\" }}\n          aria-label=\"Second Action Group\"\n        >\n          <Button\n            variant=\"primary\"\n            onClick={handleFinishAppointment}\n            disabled={selectedAppointment.status === \"Done\" ? true : false}\n          >\n            Appointment Selesai\n          </Button>\n        </ButtonGroup>\n      </Col>\n    </Row>\n  );\n\n  return (\n    <Container>\n      <h1 style={{ fontWeight: \"bold\", textAlign: \"center\" }}>Schedule</h1>\n      <FullCalendar\n        plugins={[timeGridPlugin]}\n        initialView=\"timeGridWeek\"\n        weekends={false}\n        events={appointment}\n        eventClick={handleEvent}\n      />\n      <br />\n      {toggle && (\n        <>\n          <AppointmentActionButtons />\n          <CreatePrescriptionModal\n            show={showPrescriptionModal}\n            handleClose={handlePrescriptionModalClose}\n            appointment_id={selectedAppointment._id}\n          />\n          <AddDiagnoseModal\n            show={showDiagnoseModal}\n            handleClose={handleDiagnoseModalClose}\n            appointment_id={selectedAppointment._id}\n          />\n          <Cards appointment={selectedAppointment} />\n        </>\n      )}\n    </Container>\n  );\n};\nexport default Index;\n","/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/AddDiagnoseModal.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/CreatePrescriptionModal.js",[],"/home/dheal/impact/week9/project2/fix terakhir/ib-psikiater-client/src/components/Card/index.js",[],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":58,"column":11,"nodeType":"230","messageId":"231","endLine":58,"endColumn":15},{"ruleId":"228","severity":1,"message":"232","line":64,"column":11,"nodeType":"230","messageId":"231","endLine":64,"endColumn":27},{"ruleId":"228","severity":1,"message":"229","line":81,"column":11,"nodeType":"230","messageId":"231","endLine":81,"endColumn":15},{"ruleId":"228","severity":1,"message":"233","line":87,"column":11,"nodeType":"230","messageId":"231","endLine":87,"endColumn":30},{"ruleId":"228","severity":1,"message":"234","line":231,"column":11,"nodeType":"230","messageId":"231","endLine":231,"endColumn":19},{"ruleId":"228","severity":1,"message":"235","line":3,"column":40,"nodeType":"230","messageId":"231","endLine":3,"endColumn":44},{"ruleId":"236","severity":1,"message":"237","line":21,"column":6,"nodeType":"238","endLine":21,"endColumn":20,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":82,"column":15,"nodeType":"242","endLine":82,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":85,"column":15,"nodeType":"242","endLine":85,"endColumn":76},{"ruleId":"240","severity":1,"message":"241","line":89,"column":15,"nodeType":"242","endLine":89,"endColumn":73},{"ruleId":"228","severity":1,"message":"243","line":6,"column":45,"nodeType":"230","messageId":"231","endLine":6,"endColumn":50},{"ruleId":"236","severity":1,"message":"237","line":44,"column":6,"nodeType":"238","endLine":44,"endColumn":20,"suggestions":"244"},{"ruleId":"228","severity":1,"message":"243","line":6,"column":45,"nodeType":"230","messageId":"231","endLine":6,"endColumn":50},{"ruleId":"236","severity":1,"message":"237","line":50,"column":6,"nodeType":"238","endLine":50,"endColumn":20,"suggestions":"245"},{"ruleId":"228","severity":1,"message":"246","line":10,"column":9,"nodeType":"230","messageId":"231","endLine":10,"endColumn":13},{"ruleId":"236","severity":1,"message":"247","line":45,"column":6,"nodeType":"238","endLine":45,"endColumn":8,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":72,"column":15,"nodeType":"242","endLine":79,"endColumn":16},{"ruleId":"228","severity":1,"message":"251","line":11,"column":3,"nodeType":"230","messageId":"231","endLine":11,"endColumn":13},{"ruleId":"228","severity":1,"message":"252","line":12,"column":3,"nodeType":"230","messageId":"231","endLine":12,"endColumn":14},{"ruleId":"236","severity":1,"message":"253","line":48,"column":6,"nodeType":"238","endLine":48,"endColumn":8,"suggestions":"254"},{"ruleId":"228","severity":1,"message":"255","line":77,"column":9,"nodeType":"230","messageId":"231","endLine":77,"endColumn":31},{"ruleId":"249","severity":1,"message":"250","line":94,"column":13,"nodeType":"242","endLine":97,"endColumn":14},{"ruleId":"228","severity":1,"message":"256","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"257","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"258","line":3,"column":10,"nodeType":"230","messageId":"231","endLine":3,"endColumn":16},{"ruleId":"228","severity":1,"message":"259","line":12,"column":9,"nodeType":"230","messageId":"231","endLine":12,"endColumn":16},{"ruleId":"228","severity":1,"message":"234","line":8,"column":11,"nodeType":"230","messageId":"231","endLine":8,"endColumn":19},{"ruleId":"228","severity":1,"message":"234","line":58,"column":11,"nodeType":"230","messageId":"231","endLine":58,"endColumn":19},{"ruleId":"228","severity":1,"message":"260","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":12},{"ruleId":"261","severity":1,"message":"262","line":31,"column":15,"nodeType":"263","endLine":31,"endColumn":45},{"ruleId":"264","severity":1,"message":"265","line":16,"column":51,"nodeType":"242","endLine":16,"endColumn":291},{"ruleId":"228","severity":1,"message":"266","line":2,"column":16,"nodeType":"230","messageId":"231","endLine":2,"endColumn":24},{"ruleId":"228","severity":1,"message":"256","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"257","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"267","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":11},{"ruleId":"228","severity":1,"message":"268","line":7,"column":9,"nodeType":"230","messageId":"231","endLine":7,"endColumn":20},{"ruleId":"236","severity":1,"message":"269","line":24,"column":6,"nodeType":"238","endLine":24,"endColumn":8,"suggestions":"270"},{"ruleId":"236","severity":1,"message":"269","line":38,"column":6,"nodeType":"238","endLine":38,"endColumn":8,"suggestions":"271"},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","'uploadFotoPasien' is assigned a value but never used.","'uploadFotoPsikiater' is assigned a value but never used.","'response' is assigned a value but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user.role'. Either include them or remove the dependency array.","ArrayExpression",["274"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Image' is defined but never used.",["275"],["276"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'appointment_id'. Either include it or remove the dependency array.",["277"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has a missing dependency: 'psikiater_id'. Either include it or remove the dependency array.",["278"],"'appointmentTimeHandler' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'history' is assigned a value but never used.","'swal' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Carousel' is defined but never used.","'API' is defined but never used.","'accesstoken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'accesstoken'. Either include it or remove the dependency array.",["279"],["280"],"no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"281","fix":"283"},{"desc":"281","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"289","fix":"291"},"Update the dependencies array to be: [history, user.isLogin, user.role]",{"range":"292","text":"293"},{"range":"294","text":"293"},{"range":"295","text":"293"},"Update the dependencies array to be: [appointment_id]",{"range":"296","text":"297"},"Update the dependencies array to be: [psikiater_id]",{"range":"298","text":"299"},"Update the dependencies array to be: [accesstoken]",{"range":"300","text":"301"},{"range":"302","text":"301"},[732,746],"[history, user.isLogin, user.role]",[1215,1229],[1449,1463],[1123,1125],"[appointment_id]",[1412,1414],"[psikiater_id]",[860,862],"[accesstoken]",[1441,1443]]